/*  title:  formInput
    notes:  atom styles
 ==================================================================================================================== */




/*  variables
===================================================================================================================== */
:root {
    --Form-input-phone-border: 1px solid var(--Form-input-phone-border-color);
    --Form-input-phone-border-color: rgb(var(--Global-form-border-color, 170 176 195));
    --Form-input-phone-border-radius: var(--Global-form-border-radius, 5px);
    --Form-input-phone-font-size: var(--Global-base-font-size, 16px);
    --Form-input-phone-color-error: var(--Global-color-error, 255 0 0);
    --Form-input-phone-color-success: var(--Global-color-success, 0 255 0);
    --Form-input-phone-padding: 0 .5rem;
}


/*  base
===================================================================================================================== */
.Form-input-phone.PhoneInput {
    display: inline-flex;       /*  override inherited from the module */
}
    /*  as a module, need to target the input as element
    ================================================================================================================= */
    .Form-input-phone input {
        border: var(--Form-input-phone-border);
        border-radius: var(--Form-input-phone-border-radius);
        font-size: var(--Form-input-phone-font-size);
        height: 48px;
        line-height: 1;
        outline: none;      /* poor accessability */
        padding: var(--Form-input-phone-padding);
        transition: .3s;
    }

        /*  states
        ============================================================================================================= */
        .Form-input-phone input:hover,
        .Form-input-phone input:focus,
        .Form-input-phone input:focus-visible,
        .Form-input-phone input:focus-within,
        .Form-input-phone input:active {
            box-shadow: inset 0 0 0 2px #424E79;    /* TODO change hex */
            border-color: transparent;
            transition: .2s;
        }

        /*  error
        ============================================================================================================= */
        .Form-input-phone input.error {
            background: url('error.png') 95% 50% no-repeat;
            border-color:  rgb(var(--Form-input-phone-color-error));
        }
            .Form-input-phone.error:hover {
                border-color: transparent;
            }

        /*  success
        ============================================================================================================= */
        .Form-input-phone input.success {
            background: url('success.png') 95% 50% no-repeat;
            border-color: rgb(var(--Form-input-phone-color-success));
        }
            .Form-input-phone.success:hover {
                border-color: transparent;
            }

        /*  disabled
        ============================================================================================================= */
        .Form-input-phone input:disabled {
            background-color: #EFEFEF;
            border: 1px solid #AAB0C3;
            box-shadow: none;
            cursor: not-allowed;
        }


    /*  used with a label
    ================================================================================================================= */
    .Label ~ .PhoneInput {
        margin-top: 1rem;
    }




/*  PLUGIN STYLES (from node_modules)
===================================================================================================================== */
:root {
    --PhoneInput-color--focus: #03b2cb;
    --PhoneInputInternationalIconPhone-opacity: 0.8;
    --PhoneInputInternationalIconGlobe-opacity: 0.65;
    --PhoneInputCountrySelect-marginRight: 0.35em;
    --PhoneInputCountrySelectArrow-width: 0.3em;
    --PhoneInputCountrySelectArrow-marginLeft: var(--PhoneInputCountrySelect-marginRight);
    --PhoneInputCountrySelectArrow-borderWidth: 1px;
    --PhoneInputCountrySelectArrow-opacity: 0.45;
    --PhoneInputCountrySelectArrow-color: inherit;
    --PhoneInputCountrySelectArrow-color--focus: var(--PhoneInput-color--focus);
    --PhoneInputCountrySelectArrow-transform: rotate(45deg);
    --PhoneInputCountryFlag-aspectRatio: 1.5;
    --PhoneInputCountryFlag-height: 1em;
    --PhoneInputCountryFlag-borderWidth: 1px;
    --PhoneInputCountryFlag-borderColor: rgba(0,0,0,0.5);
    --PhoneInputCountryFlag-borderColor--focus: var(--PhoneInput-color--focus);
    --PhoneInputCountryFlag-backgroundColor--loading: rgba(0,0,0,0.1);
}

.PhoneInput {
    /* This is done to stretch the contents of this component. */
    display: flex;
    align-items: center;
}

.PhoneInputInput {
    /* The phone number input stretches to fill all empty space */
    flex: 1;
    /* The phone number input should shrink
       to make room for the extension input */
    min-width: 0;
}

.PhoneInputCountryIcon {
    width: calc(var(--PhoneInputCountryFlag-height) * var(--PhoneInputCountryFlag-aspectRatio));
    height: var(--PhoneInputCountryFlag-height);
}

.PhoneInputCountryIcon--square {
    width: var(--PhoneInputCountryFlag-height);
}

.PhoneInputCountryIcon--border {
    /* Removed `background-color` because when an `<img/>` was still loading
       it would show a dark gray rectangle. */
    /* For some reason the `<img/>` is not stretched to 100% width and height
       and sometime there can be seen white pixels of the background at top and bottom. */
    background-color: var(--PhoneInputCountryFlag-backgroundColor--loading);
    /* Border is added via `box-shadow` because `border` interferes with `width`/`height`. */
    /* For some reason the `<img/>` is not stretched to 100% width and height
       and sometime there can be seen white pixels of the background at top and bottom,
       so an additional "inset" border is added. */
    box-shadow: 0 0 0 var(--PhoneInputCountryFlag-borderWidth) var(--PhoneInputCountryFlag-borderColor),
    inset 0 0 0 var(--PhoneInputCountryFlag-borderWidth) var(--PhoneInputCountryFlag-borderColor);
}

.PhoneInputCountryIconImg {
    /* Fixes weird vertical space above the flag icon. */
    /* https://gitlab.com/catamphetamine/react-phone-number-input/-/issues/7#note_348586559 */
    display: block;
    /* 3rd party <SVG/> flag icons won't stretch if they have `width` and `height`.
       Also, if an <SVG/> icon's aspect ratio was different, it wouldn't fit too. */
    width: 100%;
    height: 100%;
}

.PhoneInputInternationalIconPhone {
    opacity: var(--PhoneInputInternationalIconPhone-opacity);
}

.PhoneInputInternationalIconGlobe {
    opacity: var(--PhoneInputInternationalIconGlobe-opacity);
}

/* Styling native country `<select/>`. */

.PhoneInputCountry {
    position: relative;
    align-self: stretch;
    display: flex;
    align-items: center;
    margin-right: var(--PhoneInputCountrySelect-marginRight);
}

.PhoneInputCountrySelect {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    z-index: 1;
    border: 0;
    opacity: 0;
    cursor: pointer;
}

.PhoneInputCountrySelect[disabled] {
    cursor: default;
}

.PhoneInputCountrySelectArrow {
    display: block;
    content: '';
    width: var(--PhoneInputCountrySelectArrow-width);
    height: var(--PhoneInputCountrySelectArrow-width);
    margin-left: var(--PhoneInputCountrySelectArrow-marginLeft);
    border-style: solid;
    border-color: var(--PhoneInputCountrySelectArrow-color);
    border-top-width: 0;
    border-bottom-width: var(--PhoneInputCountrySelectArrow-borderWidth);
    border-left-width: 0;
    border-right-width: var(--PhoneInputCountrySelectArrow-borderWidth);
    transform: var(--PhoneInputCountrySelectArrow-transform);
    opacity: var(--PhoneInputCountrySelectArrow-opacity);
}

.PhoneInputCountrySelect:focus + .PhoneInputCountryIcon + .PhoneInputCountrySelectArrow {
    opacity: 1;
    color: var(--PhoneInputCountrySelectArrow-color--focus);
}

.PhoneInputCountrySelect:focus + .PhoneInputCountryIcon--border {
    box-shadow: 0 0 0 var(--PhoneInputCountryFlag-borderWidth) var(--PhoneInputCountryFlag-borderColor--focus),
    inset 0 0 0 var(--PhoneInputCountryFlag-borderWidth) var(--PhoneInputCountryFlag-borderColor--focus);
}

.PhoneInputCountrySelect:focus + .PhoneInputCountryIcon .PhoneInputInternationalIconGlobe {
    opacity: 1;
    color: var(--PhoneInputCountrySelectArrow-color--focus);
}